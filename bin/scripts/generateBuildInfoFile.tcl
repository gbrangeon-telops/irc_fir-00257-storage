set current_file_location_absolute_path [file normalize [file dirname [info script]]]
source $current_file_location_absolute_path/setEnvironment.tcl

proc genCore {scriptEnvironment fpgaSize} {
   
   #set global var here 
    set srcDir ""
    set svn_subwcrev ""
    set hwFile ""
    set elfFile ""
    set bootFile ""
    set commonDir ""
    source $scriptEnvironment
    setEnvironmentVariable $fpgaSize
    puts "$srcDir"
    set parentDirectory_path "${srcDir}/BuildInfo"
    set buildInfoFile  "${parentDirectory_path}/BuildInfo.h"
    puts $buildInfoFile
    set Vfo [open $buildInfoFile a]
    if {$fpgaSize == "16"} {
        #clear file
        chan truncate $Vfo 0
        puts $Vfo  "/**"
        puts $Vfo  " * This file declares the BuildInfo"
        puts $Vfo  " *"
        puts $Vfo  " * *************************"
        puts $Vfo  " * DO NOT EDIT THIS FILE !!!"
        puts $Vfo  " * *************************"
        puts $Vfo  " *"
        puts $Vfo  " * This file is automatically generated by the script generateBuildInfoFile.tcl"
        puts $Vfo  " * (c) Copyright 2018 Telops Inc."
        puts $Vfo  " *"
        puts $Vfo  "*/"
        puts $Vfo  "#ifndef BUILDINFO_H"
        puts $Vfo  "#define BUILDINFO_H" 
        puts $Vfo   " "
        puts $Vfo  "#if MEMCONF == 16"
        puts $Vfo   " "

    } 
    if {$fpgaSize == "32"} {
        puts $Vfo   " "
        puts $Vfo   "#elif MEMCONF == 32"
        puts $Vfo   " "

    } 

    # Get hardware revision
	set rev [git_get_rev ${hwFile} 0]
    puts $Vfo "#define SVN_HARDWARE_REV 0x${rev}"
    close $Vfo

    set Vfo [open $buildInfoFile a]
    # Get software revision
    set rev [git_get_rev ${elfFile} 0]
    puts $Vfo  "#define SVN_SOFTWARE_REV       0x${rev}"
    close $Vfo
   
    set Vfo [open $buildInfoFile a]
    # Get boot loader revision
    puts $Vfo  " #define SVN_BOOTLOADER_REV    0 "

    # Get common directory revision
    set rev [git_get_rev ${commonDir} 0]%
    puts $Vfo  " #define SVN_COMMON_REV      0x${rev}"
    close $Vfo
   
    set Vfo [open $buildInfoFile a]
    # Check for uncommitted changes
    puts $Vfo   " "
    puts $Vfo "#define SVN_UNCOMMITTED_CHANGES  ((SVN_HARDWARE_REV < 0) || (SVN_SOFTWARE_REV < 0) || (SVN_BOOTLOADER_REV < 0) || (SVN_COMMON_REV < 0))"
    puts $Vfo   " "
    puts $Vfo  "#if SVN_UNCOMMITTED_CHANGES"
    puts $Vfo  "#warning Uncommitted changes detected"
    puts $Vfo  "#endif"

    if {$fpgaSize == "32"} {
        puts $Vfo   " "
        puts $Vfo   "#endif  // FPGA_ARCH Check"
        puts $Vfo   " "
        puts $Vfo   "#endif // BUILDINFO_H"
    }

    close $Vfo
}



# WCREV : Replaced with the highest commit revision in the working copy.
#$WCMODS?TText:FText$ is replaced with TText if there are local modifications, or FText if not.


set scriptEnvironment "$current_file_location_absolute_path/setEnvironment.tcl"

genCore $scriptEnvironment "16"
genCore $scriptEnvironment "32"
