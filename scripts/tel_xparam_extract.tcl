# Author : JBO
# DATE : 13 Fev 2014

# This script extract the data from the core.bd addresse map and write it in the file tel2000_param.h

# It assume segment have been name in the Adresse editor to start with "TEL_*"
# This could be done(in adress editor) by clicking on the segment in the cell column
# and changing the name in the adress segment properties windows
set designname [get_bd_designs]
set comparison [string  compare $designname "core"]
if  {$comparison != 0} { 
   puts "Core.bd not open"
   puts "Opening core.bd"
   open_bd_design {D:/Telops/FIR-00257-Storage/xilinx/fir_00257_Storage_$memconf.srcs/sources_1/bd/core/core.bd}
} else {
   puts "Core is open"
}

#Extract the clock information
set clkName [get_property NAME [get_bd_ports -filter {TYPE == clk && DIR == O}]]
set clkFreq [get_property CONFIG.FREQ_HZ [get_bd_ports -filter {TYPE == clk && DIR == O}]]

#Extract the port information
set DataName [get_property NAME [get_bd_addr_segs -filter {NAME =~ "TEL_*"}]]
set DataAddr [get_property offset [get_bd_addr_segs -filter {NAME =~ "TEL_*"}]]
set Datarange [get_property range [get_bd_addr_segs -filter {NAME =~ "TEL_*"}]]

#open a file to write to
set filename  "d:/telops/fir-00257-Storage/src/sw/tel2000_param_$memconf.h"
set fd1 [open $filename "w"]

#Start to write the First line of the header file (DOXYGEN)
puts $fd1 "/**
 * @file tel2000_param.h
 * Tel2000 axi port address map.
 *
 * This file declares the address of every axi lite port.
 * This is automaticly generated by tel_extract_param.tcl
 *
 * \$Rev\$
 * \$Author\$
 * \$Date\$
 * \$Id\$
 * \$URL\$
 *
 * (c) Copyright 2014 Telops Inc.
 */
 
#ifndef TEL2000_PARAM_H
#define TEL2000_PARAM_H

/**
* Clock declaration
*/"

#enter a loop that write all the information
set i 0
foreach j $clkName {
   puts $fd1 "#define [string toupper [lindex $clkName $i]]_FREQ_HZ [lindex $clkFreq $i]"
   incr i
}

puts $fd1 "
/**
* AXI PORT declaration
*/"

#enter a loop that write all the information
set i 0
foreach j $DataName {
   puts $fd1 "/* Definitions for peripheral [lindex $DataName $i] */"
   puts $fd1 "#define TEL_PAR_[lindex $DataName $i]_BASEADDR [lindex $DataAddr $i]"
   set HighAddr [expr {[lindex $DataAddr $i] + [lindex $Datarange $i] - 1}]
   if {$HighAddr <= 0xFFFFFFFF} {
		puts $fd1 "#define TEL_PAR_[lindex $DataName $i]_HIGHADDR 0x[format %08X $HighAddr] \n"
   } else {
		puts $fd1 "#define TEL_PAR_[lindex $DataName $i]_HIGHADDR 0x[format %016lX $HighAddr] \n"
   }
   incr i
}

puts $fd1 "/* Definitions for peripherals connected to TEL_AXIL_PERIPHERAL */"
puts $fd1 "#define AXIL_DEMUX_SLAVE_ADDR_WIDTH       14"
puts $fd1 "#define XPAR_M_BUFFERING_CTRL_BASEADDR    (XPAR_AXIL_PERIPHERAL_BASEADDR + (0 << AXIL_DEMUX_SLAVE_ADDR_WIDTH))"
puts $fd1 "#define XPAR_M_BUF_TABLE_BASEADDR         (XPAR_AXIL_PERIPHERAL_BASEADDR + (1 << AXIL_DEMUX_SLAVE_ADDR_WIDTH))"
puts $fd1 "#define TEL_PAR_TEL_UNUSED_BASEADDR       (XPAR_AXIL_PERIPHERAL_BASEADDR + (2 << AXIL_DEMUX_SLAVE_ADDR_WIDTH))"
puts $fd1 "#define XPAR_MGT_CTRL_BASEADDR            (XPAR_AXIL_PERIPHERAL_BASEADDR + (3 << AXIL_DEMUX_SLAVE_ADDR_WIDTH))"
puts $fd1 ""
puts $fd1 "#endif // TEL2000_PARAM_H"

#close file 
close $fd1
